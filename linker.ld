/* Focus on just x86_64 for now. */
OUTPUT_FORMAT(elf64-x86-64)

ENTRY(kmain)

/* This is mostly required by the Limine bootloader protocol. */
PHDRS
{
    limine_requests PT_LOAD;
    text PT_LOAD;
    rodata PT_LOAD;
    data PT_LOAD;
}

SECTIONS
{
    /* Places the kernel in topmost 2 GB of the address space as Limine wants this. */
    . = 0xffffffff80000000;

    .limine_requests : {
        KEEP(*(.limine_requests_start))
        KEEP(*(.limine_requests))
        KEEP(*(.limine_requests_end))
    } :limine_requests

    /* Create a section for code. */
    /* Align sections to 4KB, see build.zig for this definition. */
    . = ALIGN(CONSTANT(MAXPAGESIZE));

    /* .text.* includes function sections generated by the compiler (see build.zig)
     * in the final .text section. */   
    .text : {
        *(.text .text.*)
    } :text

    /* Create a section for read only data. */
    . = ALIGN(CONSTANT(MAXPAGESIZE));
        .rodata : {
        *(.rodata .rodata.*)
    } :rodata

    /* Data. */
    . = ALIGN(CONSTANT(MAXPAGESIZE));
    .data : {
        *(.data .data.*)
    } :data

    /* Zero-initialized data. */
    .bss : {
        *(.bss .bss.*)
        *(COMMON)
    } :data

    /* Discarded sections. */
    /DISCARD/ : {
        *(.eh_frame*)
        *(.note .note.*)
    }
}